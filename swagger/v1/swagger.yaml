---
openapi: 3.0.1
info:
  title: Mastermind API
  version: v1
servers:
- url: http://localhost:3000
components:
  schemas:
    ResponseEntity:
      type: object
      properties:
        status:
          type: string
          example: success
        message:
          type: string
          example: OK
        data: {}
        errors: {}
      required:
      - status
      - message
paths:
  "/api/v1/auth/register":
    post:
      summary: Register user
      tags:
      - Auth
      parameters: []
      responses:
        '201':
          description: registered
        '422':
          description: unprocessable content
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                user:
                  type: object
                  properties:
                    username:
                      type: string
                    password:
                      type: string
                  required:
                  - username
                  - password
              required:
              - user
  "/api/v1/auth/login":
    post:
      summary: Login
      tags:
      - Auth
      parameters: []
      responses:
        '200':
          description: authenticated
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                user:
                  type: object
                  properties:
                    username:
                      type: string
                    password:
                      type: string
                  required:
                  - username
                  - password
              required:
              - user
  "/api/v1/auth/is_logged_in/{user_id}":
    get:
      summary: Get auth user
      tags:
      - Auth
      parameters:
      - name: user_id
        in: path
        required: true
        schema:
          type: string
      responses:
        '200':
          description: ok
  "/api/v1/games/create":
    post:
      summary: Create game
      tags:
      - Games
      parameters: []
      responses:
        '201':
          description: created
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                game:
                  type: object
                  properties:
                    user_id:
                      type: string
                      format: uuid
                  required:
                  - user_id
              required:
              - game
  "/api/v1/games/{user_id}":
    get:
      summary: Find latest game
      tags:
      - Games
      parameters:
      - name: user_id
        in: path
        required: true
        schema:
          type: string
      responses:
        '200':
          description: ok
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/ResponseEntity"
  "/api/v1/guesses/create":
    post:
      summary: Create guess
      tags:
      - Guesses
      parameters: []
      responses:
        '201':
          description: created
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                guess:
                  type: object
                  properties:
                    value:
                      type: string
                    game_id:
                      type: string
                      format: uuid
                  required:
                  - value
                  - game_id
              required:
              - guess
  "/api/v1/guest_games/create":
    post:
      summary: Create guest game
      tags:
      - GuestGames
      responses:
        '201':
          description: created guest game
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/ResponseEntity"
  "/api/v1/guest_games/find/{session_id}":
    get:
      summary: Find guest game
      tags:
      - GuestGames
      parameters:
      - name: session_id
        in: path
        required: true
        schema:
          type: string
      responses:
        '200':
          description: found
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/ResponseEntity"
  "/api/v1/guest_games/guess/{session_id}":
    post:
      summary: Make a guess (guest)
      tags:
      - GuestGames
      parameters:
      - name: session_id
        in: path
        required: true
        schema:
          type: string
      responses:
        '201':
          description: guess accepted
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                guess:
                  type: object
                  properties:
                    value:
                      type: string
                  required:
                  - value
              required:
              - guess
  "/api/v1/guest_games/{session_id}":
    delete:
      summary: Delete a game
      tags:
      - GuestGames
      parameters:
      - name: session_id
        in: path
        required: true
        schema:
          type: string
      responses:
        '200':
          description: guest game deleted
